version: "3.9"
networks:
  bridge_network:
    driver: bridge
services:
  proxy_manager:
    image: "jc21/nginx-proxy-manager:latest"
    restart: unless-stopped
    ports:
      # These ports are in format <host-port>:<container-port>
      - "80:80" # Public HTTP Port
      - "443:443" # Public HTTPS Port
      - "81:81" # Admin Web Port
      # Add any other Stream port you want to expose
      # - '21:21' # FTP
    environment:
      # Mysql/Maria connection parameters:
      DB_MYSQL_HOST: "db"
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: "npm"
      DB_MYSQL_PASSWORD: "npm"
      DB_MYSQL_NAME: "npm"
      # Uncomment this if IPv6 is not enabled on your host
      # DISABLE_IPV6: 'true'
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
    depends_on:
      - db
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer_papaya_env_test
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./portainer-data:/data
    networks:
      - bridge_network
    ports:
      - "9004:9000"
  nginx:
    container_name: nginx_papaya_env_production
    build:
      context: ./stack-fe-vite
      dockerfile: env.production.Dockerfile
    ports:
      - "3004:80"
    volumes:
      - ./nginx/config/default.env.production.conf:/etc/nginx/conf.d/default.conf
    networks:
      - bridge_network
    restart: unless-stopped
  mongo:
    container_name: mongo_papaya_env_production
    image: mongo:6.0
    environment:
      - MONGO_INITDB_DATABASE=papaya
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=Godofwar246357
    expose:
      - "27017"
    networks:
      - bridge_network
    volumes:
      - mongo_volume:/data/db
    restart: unless-stopped
  backend:
    container_name: backend_papaya_env_production
    build:
      context: ./stack-be
      dockerfile: env.production.Dockerfile
    ports:
      - "8004:8000"
    networks:
      - bridge_network
    restart: unless-stopped
volumes:
  mongo_volume:
# docker compose -p env_production_my_papaya -f docker-compose.env.production.yaml up -d
# docker compose -p env_production_my_papaya down
